import{_ as s,c as a,o as i,ae as t}from"./chunks/framework.BtEkjhVd.js";const c=JSON.parse('{"title":"Botfire : getMessage Method Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"get-message.md","filePath":"get-message.md"}'),h={name:"get-message.md"};function l(n,e,o,p,d,r){return i(),a("div",null,e[0]||(e[0]=[t('<h1 id="botfire-getmessage-method-documentation" tabindex="-1">Botfire : <code>getMessage</code> Method Documentation <a class="header-anchor" href="#botfire-getmessage-method-documentation" aria-label="Permalink to &quot;Botfire : `getMessage` Method Documentation&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The <code>getMessage</code> method is a key component of the Botfire for creating Telegram bots. It provides access to the details of a message received via Telegram webhooks, enabling developers to extract and process various aspects of the message, such as its content type, sender information, and metadata.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>To access the <code>getMessage</code> method, use the <code>Bot</code> class as follows:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Botfire\\Bot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p>The <code>getMessage</code> method returns an object with the following methods to extract specific information about the message:</p><h3 id="_1-contenttype" tabindex="-1">1. <code>contentType()</code> <a class="header-anchor" href="#_1-contenttype" aria-label="Permalink to &quot;1. `contentType()`&quot;">​</a></h3><p>Returns the type of content contained in the message.</p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="possible-content-types" tabindex="-1">Possible Content Types <a class="header-anchor" href="#possible-content-types" aria-label="Permalink to &quot;Possible Content Types&quot;">​</a></h4><p>The content type can be one of the following constants defined in the <code>GetMessage</code> class:</p><ul><li><code>GetMessage::CONTENT_TEXT</code> (<code>&#39;text&#39;</code>) - A text message.</li><li><code>GetMessage::CONTENT_PHOTO</code> (<code>&#39;photo&#39;</code>) - A photo message.</li><li><code>GetMessage::CONTENT_VIDEO</code> (<code>&#39;video&#39;</code>) - A video message.</li><li><code>GetMessage::CONTENT_AUDIO</code> (<code>&#39;audio&#39;</code>) - An audio message.</li><li><code>GetMessage::CONTENT_DOCUMENT</code> (<code>&#39;document&#39;</code>) - A document/file message.</li><li><code>GetMessage::CONTENT_STICKER</code> (<code>&#39;sticker&#39;</code>) - A sticker message.</li><li><code>GetMessage::CONTENT_ANIMATION</code> (<code>&#39;animation&#39;</code>) - An animation (GIF) message.</li><li><code>GetMessage::CONTENT_LOCATION</code> (<code>&#39;location&#39;</code>) - A location message.</li><li><code>GetMessage::CONTENT_CONTACT</code> (<code>&#39;contact&#39;</code>) - A contact message.</li><li><code>GetMessage::CONTENT_VOICE</code> (<code>&#39;voice&#39;</code>) - A voice message.</li><li><code>GetMessage::CONTENT_POLL</code> (<code>&#39;poll&#39;</code>) - A poll message.</li></ul><h4 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h4><p>To check if the message is a text message:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Botfire\\GetMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Botfire\\Bot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GetMessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TYPE_TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Handle text message</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-messageid" tabindex="-1">2. <code>messageId()</code> <a class="header-anchor" href="#_2-messageid" aria-label="Permalink to &quot;2. `messageId()`&quot;">​</a></h3><p>Returns the unique identifier of the message.</p><h4 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$message_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">messageId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="_3-date" tabindex="-1">3. <code>date()</code> <a class="header-anchor" href="#_3-date" aria-label="Permalink to &quot;3. `date()`&quot;">​</a></h3><p>Returns the timestamp of when the message was sent.</p><h4 id="example-2" tabindex="-1">Example <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="_4-text" tabindex="-1">4. <code>text()</code> <a class="header-anchor" href="#_4-text" aria-label="Permalink to &quot;4. `text()`&quot;">​</a></h3><p>Returns the text content of the message (applicable for text messages).</p><h4 id="example-3" tabindex="-1">Example <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="_5-caption" tabindex="-1">5. <code>caption()</code> <a class="header-anchor" href="#_5-caption" aria-label="Permalink to &quot;5. `caption()`&quot;">​</a></h3><p>Returns the caption of the message, if available (applicable for messages with media content such as photos, videos, or documents).</p><h4 id="example-4" tabindex="-1">Example <a class="header-anchor" href="#example-4" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$caption </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">caption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="_6-from" tabindex="-1">6. <code>from()</code> <a class="header-anchor" href="#_6-from" aria-label="Permalink to &quot;6. `from()`&quot;">​</a></h3><p>Returns an object representing the user or bot that sent the message. This object is an instance of the <code>User</code> class, as defined in the Telegram API (see <a href="https://core.telegram.org/bots/api#user" target="_blank" rel="noreferrer">Telegram API: User</a>).</p><h4 id="available-methods-for-from" tabindex="-1">Available Methods for <code>from()</code> <a class="header-anchor" href="#available-methods-for-from" aria-label="Permalink to &quot;Available Methods for `from()`&quot;">​</a></h4><ul><li><code>getId(): ?int</code> - Returns the unique identifier for the user or bot (up to 52 significant bits, safe for 64-bit integers or double-precision floats).</li><li><code>isBot(): bool</code> - Returns <code>true</code> if the sender is a bot.</li><li><code>getFirstName(): ?string</code> - Returns the sender&#39;s first name.</li><li><code>getLastName(): ?string</code> - Returns the sender&#39;s last name, if available.</li><li><code>getFullName(): ?string</code> - Returns the sender&#39;s full name (combines first and last names, if available).</li><li><code>getUsername(): ?string</code> - Returns the sender&#39;s username, if available.</li><li><code>getLanguageCode(): ?string</code> - Returns the IETF language tag of the sender&#39;s language, if available.</li><li><code>isPremium(): bool</code> - Returns <code>true</code> if the sender is a Telegram Premium user.</li><li><code>addedToAttachmentMenu(): bool</code> - Returns <code>true</code> if the sender added the bot to their attachment menu.</li></ul><h4 id="example-5" tabindex="-1">Example <a class="header-anchor" href="#example-5" aria-label="Permalink to &quot;Example&quot;">​</a></h4><p>To retrieve the sender&#39;s username:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="_7-chat" tabindex="-1">7. <code>chat()</code> <a class="header-anchor" href="#_7-chat" aria-label="Permalink to &quot;7. `chat()`&quot;">​</a></h3><p>Returns an object representing the chat where the message was sent, as described by the Telegram API: &quot;Chat the message belongs to.&quot;</p><h4 id="available-methods-for-chat" tabindex="-1">Available Methods for <code>chat()</code> <a class="header-anchor" href="#available-methods-for-chat" aria-label="Permalink to &quot;Available Methods for `chat()`&quot;">​</a></h4><ul><li><code>getId(): ?int</code> - Returns the unique identifier for the chat.</li><li><code>getType(): ?string</code> - Returns the type of the chat (<code>&#39;private&#39;</code>, <code>&#39;group&#39;</code>, <code>&#39;supergroup&#39;</code>, or <code>&#39;channel&#39;</code>).</li><li><code>getTitle(): ?string</code> - Returns the title of the chat (for supergroups, channels, or group chats).</li><li><code>getUsername(): ?string</code> - Returns the chat&#39;s username, if available (for private chats, supergroups, or channels).</li><li><code>getFirstName(): ?string</code> - Returns the first name of the other party in a private chat, if available.</li><li><code>getLastName(): ?string</code> - Returns the last name of the other party in a private chat, if available.</li><li><code>getFullName(): ?string</code> - Returns the full name of the other party in a private chat (combines first and last names, if available).</li><li><code>isForum(): bool</code> - Returns <code>true</code> if the supergroup chat has topics enabled.</li></ul><h4 id="example-6" tabindex="-1">Example <a class="header-anchor" href="#example-6" aria-label="Permalink to &quot;Example&quot;">​</a></h4><p>To retrieve the chat ID:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$chat_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="_8-isreply-bool" tabindex="-1">8. <code>isReply(): bool</code> <a class="header-anchor" href="#_8-isreply-bool" aria-label="Permalink to &quot;8. `isReply(): bool`&quot;">​</a></h3><p>Returns <code>true</code> if the message is a reply to another message.</p><h4 id="example-7" tabindex="-1">Example <a class="header-anchor" href="#example-7" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isReply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Handle reply message</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_9-hasquote-bool" tabindex="-1">9. <code>hasQuote(): bool</code> <a class="header-anchor" href="#_9-hasquote-bool" aria-label="Permalink to &quot;9. `hasQuote(): bool`&quot;">​</a></h3><p>Returns <code>true</code> if the message contains a quoted text.</p><h4 id="example-8" tabindex="-1">Example <a class="header-anchor" href="#example-8" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasQuote</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Handle message with quote</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_10-quote-textquote" tabindex="-1">10. <code>quote(): ?TextQuote</code> <a class="header-anchor" href="#_10-quote-textquote" aria-label="Permalink to &quot;10. `quote(): ?TextQuote`&quot;">​</a></h3><p>Returns an instance of the <code>TextQuote</code> class representing the quoted text in the message, or <code>null</code> if no quote exists.</p><h4 id="example-9" tabindex="-1">Example <a class="header-anchor" href="#example-9" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$quote </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">quote</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($quote) {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Process the quoted text</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_11-replytomessage-getmessage" tabindex="-1">11. <code>replyToMessage(): ?GetMessage</code> <a class="header-anchor" href="#_11-replytomessage-getmessage" aria-label="Permalink to &quot;11. `replyToMessage(): ?GetMessage`&quot;">​</a></h3><p>Returns the message that the current message is replying to, if it exists. If the message is not a reply, this method returns <code>null</code>. The returned object is an instance of the <code>GetMessage</code> class, allowing access to the same methods as the original message.</p><h4 id="example-10" tabindex="-1">Example <a class="header-anchor" href="#example-10" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$reply_message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyToMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($reply_message) {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Process the replied-to message</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $reply_text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $reply_message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $content_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $reply_message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_12-deletethismessage-bool" tabindex="-1">12. <code>deleteThisMessage(): bool</code> <a class="header-anchor" href="#_12-deletethismessage-bool" aria-label="Permalink to &quot;12. `deleteThisMessage(): bool`&quot;">​</a></h3><p>Deletes the current message from the chat. This method uses the message&#39;s ID and the chat&#39;s ID to perform the deletion via the <code>Bot::deleteMessage()</code> method.</p><h4 id="example-11" tabindex="-1">Example <a class="header-anchor" href="#example-11" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deleteThisMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><ul><li>The <code>getMessage</code> method is designed to handle messages received via Telegram webhooks, providing a structured way to access message details.</li><li>Use <code>contentType()</code> to determine the type of message content and handle it appropriately in your bot logic.</li><li>The <code>from()</code> and <code>chat()</code> methods provide detailed information about the sender and the chat context, respectively, aligning with Telegram&#39;s API specifications.</li><li>The event type check methods (e.g., <code>isCallbackQuery()</code>, <code>isEditedMessage()</code>) rely on the <code>GetEvent</code> class and are useful for filtering specific event types.</li><li>The <code>messageId()</code> and <code>date()</code> methods are useful for tracking and logging messages.</li><li>The <code>text()</code> and <code>caption()</code> methods provide access to textual content, while <code>quote()</code> and <code>hasQuote()</code> allow handling of quoted messages.</li><li>For more details on the <code>User</code> and <code>Chat</code> objects, refer to the Telegram API documentation: <a href="https://core.telegram.org/bots/api#user" target="_blank" rel="noreferrer">User</a> and <a href="https://core.telegram.org/bots/api#chat" target="_blank" rel="noreferrer">Chat</a>.</li></ul>',70)]))}const g=s(h,[["render",l]]);export{c as __pageData,g as default};
